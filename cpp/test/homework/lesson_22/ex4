#include <iostream>
#include <stdlib.h>
#include <ctime>
using namespace std;

int **giveMemoryCalloc(int **a, int rows, int colls);
int **freeMemory(int **a, int rows);
void init(int **a, int rows, int colls);
void print(int **a, int rows, int colls);

int **delete_row(int **a, int *rows, int colls, int index);


int main()
{
	setlocale(0, "");
	int **a = nullptr, rows, colls, index;
	cout << "Введите кол-во строк и столбцов ";
	cin >> rows >> colls;
	a = giveMemoryCalloc(a, rows, colls);
	init(a, rows, colls);
	print(a, rows, colls);
	cout << "Введите индекс вставляемой строчки ";
	cin >> index;
	a = delete_row(a, &rows, colls, index);
	print(a, rows, colls);
	a = freeMemory(a, rows);
	return 0;
}


void print(int **a, int rows, int colls)
{
	for (int i = 0; i < rows; i++){
		for (int j = 0; j < colls; j++)
			cout << a[i][j] << "\t";
		cout << endl;
	}
}

void init(int **a, int rows, int colls)
{
	for (int i = 0; i < rows; i++)
	for (int j = 0; j < colls; j++)
		a[i][j] = rand() % 25 - 10;
}

int **freeMemory(int **a, int rows)
{
	for (int i = 0; i < rows; i++)
		free(a[i]);
	free(a);

	return a = NULL;
}

int **giveMemoryCalloc(int **a, int rows, int colls)
{
	a = (int**)calloc(rows, sizeof(int*));

	for (int i = 0; i < rows; i++)
		a[i] = (int*)calloc(colls, sizeof(int));

	return a;
}
int **delete_row(int **a, int *rows, int colls, int index)
{
	int **temp = nullptr;
	temp = giveMemoryCalloc(temp, *rows -1, colls);
	for (int i = 0; i < index; i++)
	{
		for (int j = 0; j < colls; j++)
		{
			temp[i][j] = a[i][j];
		}
	}

	for (int i = index; i < *rows-1; i++)
	{
		for (int j = 0; j < colls; j++)
		{
			temp[i][j] = a[i+1][j];
		}
	}
	(*rows)--;
	return temp;
}
