union myunion
{
  int data1;
  double 2;
}


struct bit
{
  
	bool a1 : 1;
	bool a2 : 1;
	bool a3 : 1;
	bool a4 : 1;
	bool a5 : 1;
	bool a6 : 1;
	bool a7 : 1;
}
sizeof(bit)=1



#include<iostream>
using namespace std;

struct bit
{
	bool a0 : 1;
	bool a1 : 1;
	bool a2 : 1;
	bool a3 : 1;
	bool a4 : 1;
	bool a5 : 1;
	bool a6 : 1;
	bool a7 : 1;
};
union Int
{
	int a;
	char byte[sizeof(int)];
	bit c[sizeof(int)];
	

};
union Double
{
	double a;
	char byte[sizeof(double)];
	bit c[sizeof(double)];

};

int main()
{
	Int a;
	Double b;
	a.a = 12;
	b.a = 12.12;
	for (int i = 3; i >= 0; i--)
		cout << hex << (int)a.byte[i];
	cout << endl;
	for (int i = 7; i >= 0; i--)
		cout << hex << (double)b.byte[i];



	return 0;

}
