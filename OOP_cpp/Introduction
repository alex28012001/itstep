Boost - собрание библиотек классов с++
Класс должен удовлетворять принципу единственной ответственности
Инкапсуляция - скрытие реализаций,объединение данных и методов
Наследование - производные классы получают данные и методы от своих базовых классов
Полиморфизм -  способность объекта использовать методы производного класса(перегрузка методов)

Конструктор -имя класса
деструктор тильда(~) имя класса

Модификаторы доступа: private - доступно в собственных методах класса
                      public - поля и методы доступны везде
                      protected - доступно в собственных методах класса и в производных класса

Myclass():a(0),b(0)
{
}

Аксессоры:
int getSize() const
{
  return size;
}

void setSize(const int s)
{
  size=s;
}


int a=2;
int b{a*2}; метод инициализации
new и delete - аналог malloc и free

inline void MyClass::Method(){}

#include<string>
void f()
{
std::string myString="Hello,World!";
}

статические переменные в классе:
static int counter;
присвоить значение можно только за пределами класса(не в main)
int MyClass::counter=0;
MyClass::getCounter;

Делегирующий конструктор
MyClass(double x){cout<<"228";};
MyClass(int x):MyClass(int x)
